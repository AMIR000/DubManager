<?xml version="1.0" encoding="utf-8"?>
<component:BaseView xmlns:fx="http://ns.adobe.com/mxml/2009"
                    xmlns:s="library://ns.adobe.com/flex/spark"
                    xmlns:mx="library://ns.adobe.com/flex/mx"
                    xmlns:component="ru.kokorin.component.*"
                    xmlns:episode="ru.kokorin.dubmanager.component.episode.*"
                    xmlns:parsley="http://www.spicefactory.org/parsley">

    <component:title>{resourceManager.getString('component', 'serial')}{changeTracker.changed?' *':''}</component:title>

    <fx:Declarations>
        <episode:EpisodePM id="episodePM" save="{model.saveEpisode(event.item, event.original)}"/>

        <parsley:PopUp open="{episodePM.isOpen}" modal="true" reuse="false">
            <parsley:behaviors>
                <fx:Array>
                    <component:KeepMaxSizeBehavior/>
                </fx:Array>
            </parsley:behaviors>
            <episode:EpisodeView model="{episodePM}"/>
        </parsley:PopUp>

        <s:DateTimeFormatter id="dtFormatter" dateStyle="long" timeStyle="none"/>
    </fx:Declarations>
    <fx:Script>
		<![CDATA[
        import mx.collections.ArrayList;

        import ru.kokorin.dubmanager.domain.Episode;

        import ru.kokorin.dubmanager.domain.Episode;

        import ru.kokorin.dubmanager.domain.EpisodeStatus;

        import ru.kokorin.dubmanager.domain.SerialStatus;
        import ru.kokorin.dubmanager.domain.SerialType;
        import ru.kokorin.util.LabelUtil;
        import ru.kokorin.util.RendererUtil;

        [Bindable]
        public function get model():SerialPM {
            return getModel() as SerialPM;
        }

        public function set model(value:SerialPM):void {
            setModel(value);
        }


        override protected function clear():void {
            super.clear();
            viewstack.selectedIndex = 0;
        }

        private function createEpisode():void {
            var lastEpisode:Episode;
            for each (var episode:Episode in model.serial.episodes) {
                if (!lastEpisode || lastEpisode.number < episode.number) {
                    lastEpisode = episode;
                }
            }

            var newEpisode:Episode;
            if (lastEpisode) {
                newEpisode = new Episode();
                newEpisode.number = lastEpisode.number + 1;
                newEpisode.status = EpisodeStatus.NOT_STARTED;
                newEpisode.date = new Date(lastEpisode.date);
                newEpisode.date.date += 7;
            }

            episodePM.open(newEpisode, true);
        }

        private function itemDoubleClick(event:MouseEvent, item:Object):void {
            episodePM.open(item);
        }
        ]]>
	</fx:Script>

    <component:layout>
        <s:VerticalLayout paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"
                          gap="0"/>
    </component:layout>

    <s:TabBar dataProvider="{viewstack}" width="300"/>
    <s:BorderContainer width="100%" height="100%">
        <mx:ViewStack id="viewstack" width="100%" height="100%">
            <s:NavigatorContent width="100%" height="100%" label="{resourceManager.getString('component', 'serial.details')}">
                <s:Scroller width="100%" height="100%">
                    <s:Group width="100%">
                        <s:Form width="100%">
                            <s:layout>
                                <s:FormLayout gap="-16" paddingLeft="-15" paddingRight="-15" paddingTop="-5" paddingBottom="-5"/>
                            </s:layout>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.name')}">
                                <s:TextInput width="100%" text="@{model.serial.name}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.type')}">
                                <s:DropDownList id="typeList" width="100%"
                                                labelFunction="{LabelUtil.getEnumLabelFunction(SerialType)}"
                                                dataProvider="{new ArrayList(SerialType.types)}"
                                                selectedItem="{model.serial.type}"
                                                change="{model.serial.type = typeList.selectedItem as SerialType}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.status')}">
                                <s:DropDownList id="statusList" width="100%"
                                                labelFunction="{LabelUtil.getEnumLabelFunction(SerialStatus)}"
                                                dataProvider="{new ArrayList(SerialStatus.statuses)}"
                                                selectedItem="{model.serial.status}"
                                                change="{model.serial.status = statusList.selectedItem as SerialStatus}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.episodesCount')}">
                                <s:NumericStepper width="100" minimum="0" maximum="{Number.MAX_VALUE}"
                                                  value="@{model.serial.episodesCount}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.videoURL')}">
                                <s:TextInput width="100%" text="@{model.serial.videoURL}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.subtitleURL')}">
                                <s:TextInput width="100%" text="@{model.serial.subtitleURL}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.timingBy')}">
                                <s:TextInput width="100%" text="@{model.serial.timingBy}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.soundBy')}">
                                <s:TextInput width="100%" text="@{model.serial.soundBy}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.integrationBy')}">
                                <s:TextInput width="100%" text="@{model.serial.integrationBy}"/>
                            </s:FormItem>
                            <s:FormItem width="100%" label="{resourceManager.getString('component', 'serial.comment')}">
                                <s:TextArea width="100%" text="@{model.serial.comment}" heightInLines="10"/>
                            </s:FormItem>
                        </s:Form>
                    </s:Group>
                </s:Scroller>
            </s:NavigatorContent>

            <s:NavigatorContent width="100%" height="100%" label="{resourceManager.getString('component', 'serial.episodes')}">
                <s:VGroup width="100%" height="100%"
                          paddingLeft="5" paddingRight="5" paddingBottom="5" paddingTop="5">
                    <s:HGroup width="100%" verticalAlign="middle" horizontalAlign="right">
                        <s:Button width="100" label="{resourceManager.getString('component', 'add')}"
                                  click="{createEpisode()}"/>
                        <s:Button width="100" label="{resourceManager.getString('component', 'edit')}"
                                  click="{episodePM.open(dg.selectedItem)}" enabled="{dg.selectedItem}"/>
                        <s:Button width="100" label="{resourceManager.getString('component', 'remove')}"
                                  click="{model.removeEpisode(dg.selectedItem)}" enabled="{dg.selectedItem}"/>
                    </s:HGroup>
                    <s:DataGrid id="dg" width="100%" height="100%" dataProvider="{model.serial.episodes}"
                                doubleClickEnabled="true" doubleClickMode="row"
                                doubleClick="{RendererUtil.onRenderer(event, itemDoubleClick)}">
                        <s:columns>
                            <s:ArrayList>
                                <s:GridColumn dataField="number"
                                              headerText="{resourceManager.getString('component', 'episode.number')}"/>
                                <s:GridColumn dataField="status" labelFunction="{LabelUtil.getEnumLabelFunction(EpisodeStatus)}"
                                              headerText="{resourceManager.getString('component', 'episode.status')}"/>
                                <s:GridColumn dataField="date" formatter="{dtFormatter}"
                                              headerText="{resourceManager.getString('component', 'episode.date')}"/>
                            </s:ArrayList>
                        </s:columns>
                    </s:DataGrid>
                </s:VGroup>
            </s:NavigatorContent>
        </mx:ViewStack>
    </s:BorderContainer>
</component:BaseView>
